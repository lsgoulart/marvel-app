{"version":3,"sources":["services/index.js","configs/index.js","containers/ComicsDetails/index.js"],"names":["axios","defaults","baseURL","params","apikey","getComics","get","getComic","id","Section","styled","section","Container","main","ImageList","div","ComicsDetails","useState","undefined","comicDetails","setComicDetails","loading","setLoading","useEffect","a","data","results","fetchData","console","log","src","thumbnail","path","extension","title","alt","description","format","pageCount","prices","price","images","map","img"],"mappings":"wMAGAA,IAAMC,SAASC,QAAf,wCACAF,IAAMC,SAASE,OAAS,GACxBH,IAAMC,SAASE,OAAOC,OCJJ,mCDMX,IAAMC,EAAY,SAAAF,GAAM,OAC7BH,IAAMM,IAAI,SAAU,CAClBH,YAESI,EAAW,SAAAC,GAAE,OAAIR,IAAMM,IAAN,iBAAoBE,M,u0BENlD,IAAMC,EAAUC,IAAOC,QAAV,KAOPC,EAAYF,IAAOG,KAAV,KA0BTC,EAAYJ,IAAOK,IAAV,KAgEAC,UArDO,SAAC,GAAY,IAAD,EAATR,EAAS,EAATA,GAAS,EACQS,wBAASC,GADjB,mBACzBC,EADyB,KACXC,EADW,OAEFH,oBAAS,GAFP,mBAEzBI,EAFyB,KAEhBC,EAFgB,KAoBhC,OAhBAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,6DAChBJ,OAAgBF,GAChBI,GAAW,GAFK,SAIOf,YAASC,GAJhB,gBAIRiB,EAJQ,EAIRA,KAERL,EAAe,OAACK,QAAD,IAACA,OAAD,EAACA,EAAMA,KAAKC,QAAQ,IACnCJ,GAAW,GAPK,2CAAH,qDAUfK,KACC,CAACnB,IAEJoB,QAAQC,IAAIR,EAASF,GAGnB,cAACV,EAAD,UACE,eAACG,EAAD,WACE,qBACEkB,IAAG,iBAAKX,QAAL,IAAKA,OAAL,EAAKA,EAAcY,UAAUC,KAA7B,mBAAqCb,QAArC,IAAqCA,OAArC,EAAqCA,EAAcY,UAAUE,WAChEC,MAAK,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAce,MACrBC,IAAG,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAce,QAErB,gCACE,oCAAKf,QAAL,IAAKA,OAAL,EAAKA,EAAce,QACnB,mCAAIf,QAAJ,IAAIA,OAAJ,EAAIA,EAAciB,cAClB,+BACE,+BACE,8CADF,WAC6BjB,QAD7B,IAC6BA,OAD7B,EAC6BA,EAAckB,UAE3C,+BACE,8DADF,WACuClB,QADvC,IACuCA,OADvC,EACuCA,EAAcmB,aAErD,+BACE,+CADF,YAC4BnB,QAD5B,IAC4BA,GAD5B,UAC4BA,EAAcoB,OAAO,UADjD,aAC4B,EAAyBC,YAIvD,cAAC1B,EAAD,iBACGK,QADH,IACGA,OADH,EACGA,EAAcsB,OAAOC,KAAI,SAACC,GAAD,OACxB,qBAAKb,IAAG,UAAKa,EAAIX,KAAT,YAAiBW,EAAIV,WAAaE,IAAKQ,EAAIX,MAAWW,EAAIX","file":"static/js/6.90b3c499.chunk.js","sourcesContent":["import axios from 'axios'\nimport configs from '../configs'\n\naxios.defaults.baseURL = `https://gateway.marvel.com/v1/public/`\naxios.defaults.params = {}\naxios.defaults.params.apikey = configs.API_PUBLIC_KEY\n\nexport const getComics = params =>\n  axios.get('comics', {\n    params,\n  })\nexport const getComic = id => axios.get(`comics/${id}`)\nexport const getSeries = () => axios.get('series')\n","export default {\n  API_PUBLIC_KEY: '7f773469f9f347ac20fe61625756ba78',\n  API_PRIVATE_KEY: '480c36be70b1776dd808980afb42cb9f95ca745d',\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { getComic } from '../../services'\n\nconst Section = styled.section`\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  color: #0f0d0f;\n`\n\nconst Container = styled.main`\n  width: 100%;\n  padding: 24px;\n  display: flex;\n  flex-flow: row wrap;\n  padding-top: 80px;\n\n  img {\n    margin-right: 32px;\n  }\n\n  p {\n    margin-top: 16px;\n    line-height: 1.4;\n    max-width: 800px;\n  }\n\n  ul {\n    margin-top: 16px;\n\n    li {\n      margin-top: 8px;\n    }\n  }\n`\n\nconst ImageList = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  margin-top: 32px;\n\n  img {\n    max-width: 200px;\n    border: 5px solid #0f0d0f;\n  }\n`\n\nconst ComicsDetails = ({ id }) => {\n  const [comicDetails, setComicDetails] = useState(undefined)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setComicDetails(undefined)\n      setLoading(true)\n\n      const { data } = await getComic(id)\n\n      setComicDetails(data?.data.results[0])\n      setLoading(false)\n    }\n\n    fetchData()\n  }, [id])\n\n  console.log(loading, comicDetails)\n\n  return (\n    <Section>\n      <Container>\n        <img\n          src={`${comicDetails?.thumbnail.path}.${comicDetails?.thumbnail.extension}`}\n          title={comicDetails?.title}\n          alt={comicDetails?.title}\n        />\n        <div>\n          <h1>{comicDetails?.title}</h1>\n          <p>{comicDetails?.description}</p>\n          <ul>\n            <li>\n              <strong>Formato:</strong> {comicDetails?.format}\n            </li>\n            <li>\n              <strong>Número de páginas:</strong> {comicDetails?.pageCount}\n            </li>\n            <li>\n              <strong>Preço:</strong> ${comicDetails?.prices[0]?.price}\n            </li>\n          </ul>\n\n          <ImageList>\n            {comicDetails?.images.map((img) => (\n              <img src={`${img.path}.${img.extension}`} alt={img.path} key={img.path} />\n            ))}\n          </ImageList>\n        </div>\n      </Container>\n    </Section>\n  )\n}\nexport default ComicsDetails\n"],"sourceRoot":""}